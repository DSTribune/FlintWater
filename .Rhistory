1+1
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/datasets/nyt1.csv"))
head(data1)
data1$agecat <- cut(data1$Age, c(-Inf, 0, 18, 24, 34, 44, 54, 64, Inf))
summary(data1)
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x),min(x),mean(x),max(x))}
summaryBy(Age~agecat, data = data1, FUN=siterange)
head(ddata())
head(data1)
test <- data.frame(x = c(1,2,3,4,5,6,7), y = 2*x^2)
test <- data.frame(x = c(1,2,3,4,5,6,7), y = 2*c(1,2,3,4,5,6,7)^2)
test
test$x2 <- test$x^2
fit1 <- lm(y ~ x + x2, data = test)
fit2 <- lm(y ~ poly(x,2), data = test)
fit1
fit2
predict(fit1, 2)
predict(fit1, x = 2)
predict(fit2, x = 2)
fit2 <- lm(y ~ poly(x,2, raw = TRUE), data = test)
fit1
fit2
install.packages("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
pnorm(70, mean=80, sd=10)
pnorm(1200, mean=1100, sd=75)
pnorm(1240, mean=1100, sd=75)
pnorm(1230, mean=1100, sd=75)
pbinom(5, size = 5, prob = 0.5)
pbinom(5, size = 10, prob = 0.5)
pbinom(5, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 5, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 5-1, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 1, size = 1, prob = 0.5, lower.tail = FALSE)
pbinom(q = 0, size = 1, prob = 0.5, lower.tail = FALSE)
pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 2, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
y<-pbinom(q = 2, size = 5, prob = 0.5, lower.tail = FALSE)
y
y-x
y
x
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
16/52
0
16/52
12/52
3/51
2/51
swirl()
0.64
0.64
mypdf
?mypdf
mypdf
mypdf(1.6)
integrate(mypdf,0,1.6)
sqrt(2)
swirl
swirl()
exit
0.001*.997
(1-0.001)*(1-.985)
(.001*.997)/((.997*0.001)+(1-0.001)*(1-.985))
dice_sqr
ex2_fair <- sum(dice_fair)
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - 3.5^2
sum(dice_high*dice_sqr) - 3.5^2
sum(dice_high*dice_sqr) - edh^2
?matri
?"matrix"
matrix(rnorm(10),10)
matrix(rnorm(10))
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(1000),1000),1,mean))
sd(apply(matrix(runif(1000),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(n)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(3,5)*(.8)^(5-3)*(1-0.8)*3
choose(5,3)*(.8)^(5-3)*(1-0.8)*3
choose(5,3)*(.8)^(5-3)*(1-0.8)^3
choose(5,3)*(.8)^(3)*(1-0.8)^3
apply(1:3,function(x) choose(5,x)*(.8)^(x)*(1-0.8)^x)
choose(5,3)*(.8)^(3)*(1-0.8)^3+choose(5,4)*(.8)^(4)*(1-0.8)^4+choose(5,5)*(.8)^(5)*(1-0.8)^5
choose(5,3)*(.8)^3*(.2)^(5-3)+choose(5,4)*(.8)^4*(.2)^(5-4)+choose(5,5)*(.8)^5*(.2)^(5-5)
?pbinom
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(0.1)
0
qnorm(3,2)
qnorm(.975,3,2)
3+2*1.96
?pnorm
pnorm(1200,1020,50,lower.tail=FALSE)
pnorm((1200-1020)/50)
pnorm((1200-1020)/50,lower.tail=FALSE)
?qnorm
qnorm(.75,1020,50,lower.tail=TRUE)
.53
.53
?ppois
ppois(3,2.5*4)
?pbinom
pbinom(5,1000)
pbinom(5,1000, 2.4*4)
pbinom(5,1000, .01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
?qnorm
qnorm(0.95)
.6+c(-1,+1)
.6+c(1,-1)*qnorm(.975)*sqrt(.6*.4/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
?binom.test
binom.test()
binom.test(60,100)
binom.test(60,100)$conf
binom.test(60,100)$conf.int
?mywald
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
?pnorm
?qnorm
qnorm(.95,1100)
.25^4+.25^3
?ppois
ppois(10,15)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
g2-g1
difference <- g2-g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qt(.95,9)*(s/sqrt(10))
mn+c(-1,1)*qt(.975,9)*(s/sqrt(10))
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
?t.test
t.test(difference,conf.level = 0.95)
t.test(difference)$conf
t.test(difference)$conf.int
sp<(7)*(15.34)^2+(20)*(18.23)^2
sp<-(7)*(15.34)^2+(20)*(18.23)^2
ns<-(8+21-2)
sp <- sqrt(sp/ns)
(132.86-127.44)+c(1,-1)*tq(ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(1,-1)*qt(ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(1,-1)*qt(.975,ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(-1,1)*qt(.975,ns)*sp*sqrt((1/8)+(1/21))
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-((var(g1)+var(g2))/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
g2
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- 2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 3
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
4
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
2
s/sqrt(10)
10/sqrt(100)
swirl()
swirl()
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("proto")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages("proto")
install.packages(packageurl, repos=NULL, type="source")
library(swirl)
swirl()
2
7
(32-30)/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs,paired-TRUE)
d
3
t.test(fs$sheight-fs$fheight)
sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
?pt
pt(2.5,15,lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,size-8,prob=.5,lower.tail=FALSE)
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(6,size=8,prob=.5,lower.tail=TRUE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
ppois(9, lower.tail=FALSE,lambda = 5)
install.packages("PKI")
install.packages("rsconnect")
list.of.packages <- c("ggplot2", "acs")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) {install.packages(new.packages)}
library(ggplot2)
library(acs)
## An Analysis of the Flint Michigan Water Crisis
### Part 1: Start at the Source
###Introduction
As many have heard recently residents of Flint Michigan have been rightly outraged due to the high presence of toxic chemicals including lead in their drinking water. The question arises how did this occur and was it a forseeable incident? The backstory that led up to this incident can be generalized into a few main chapters.
1) Flint had long sourced their water from the Detroit Water and Sewerage Department (DWSD)
2) The city had financial incentive to reduce spending because they were under financial stress
3) Flint went into an agreement with the Karegnondi Water Authority (KWA) and their to be completed source from Lake Huron(end of 2016)
4) The existing supplier DWSD provided their 12 month notice that their supply contract would end on April 2014
5) The flint river was relied on to supply water in the interim
6) The flint river contained significantly higher levels of chloride than the Detroit water source and no anti-corroding agents were applied
###Hypothesis
In this analysis we will utilize Census Data as well as US Geological Wate Quality Survey Data to analyse the Flint incident starting at the source pre-treated water as well as nearby streams in Detroit and near Lake Huron. It is not meant to serve as conclusive evidence of any kind. We will be looking specifically at chloride concentrations.
Before we begin let's check for and install any necesary packages for this story
```{r}
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(dplyr)
library(xtable)
```
The city of Flint is located in Genesee County and this is really a story of three counties. Detroit, Wayne County that originally sold treated water from [multiple rivers including the Detroit River](http://www.dwsd.org/downloads_n/customer_service/customer_information/water_quality_report.pdf) to Flint as well as the KWA plant [under construction sourcing water from Lake Huron] (http://www.nytimes.com/2014/05/26/business/detroit-plan-to-profit-on-water-looks-half-empty.html?_r=0) located in Sanilac County.
We will download fresh water data from those three counties and merge them into one data frame
```{r}
#Genesee (Flint)
temp <- tempfile()
download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", temp)
wqGen<- read.csv(unz(temp, "result.csv"))
wqGen$County = "Genesee"
#Wayne (Detroit River)
temp <- tempfile()
download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A163&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", temp)
wqWayne<- read.csv(unz(temp, "result.csv"))
wqWayne$County = "Wayne"
#Merge the three County Water Measurements
wqDf <- rbind(wqGen, wqWayne)
#Save an offline version of the merged county water data
write.csv(wqDf, file ="MI3CountyCountyWaterData.csv")
```
We filtered our data for high quality measurements only taken at the surface. We specifically collected data on dissolved chloride concentrations because chloride ions are the key element in contributing to the corrosion in Flint pipes leading the leaching of metals such as lead. In the second half of this story we will also cover how the addition of chlorine escalated chloride concentrations but for now we will focus on pre-treatment water quality.
```{r}
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted' | ResultStatusIdentifier == 'Final' | ResultStatusIdentifier == 'Historical')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
```
We now would like to see if there is a significant difference in pre-treated chloride concentrations amongst the two counties.
```{r}
#What we want is a percentage of samples binned by concentration
percentConc<- wqDf %>%
group_by(County) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
Median = median(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalSamples = n(),
stdError = sd(ResultMeasureValue, na.rm = TRUE))
percentConc$min <- percentConc$Avg - percentConc$stdError
percentConc$max <- percentConc$Avg + percentConc$stdError
plot1 <- ggplot(percentConc, aes(x=County))
plot1 <- plot1 + geom_errorbar(aes(ymin=min,ymax=max),data=percentConc,width = 0.5)
plot1 <- plot1 + geom_boxplot(aes(y=Avg))
plot1 <- plot1 + ggtitle("Surface Water Chloride Concentrations \n in Genesse and Wayne County MI (USGS)") + ylab("Average Chloride Concentration")
plot1
```
What we care about in this plot is the average as well as the standard error of the distribution. It appears that Genesee County overall has a higher concentration of chloride in the surface water overall. Let's see if this is statistically significant or not as their is overlap in the standard error.
```{r}
Gen <- filter(wqDf, County == "Genesee")
Way <- filter(wqDf, County == "Wayne")
Gen_Way <- t.test(Gen$ResultMeasureValue, Way$ResultMeasureValue, alternative=c("greater"))
Gen_Way$p.value
```
The p-value for this t-test shows that Genesee County has a *significantly greater* chloride conncentration in its surface water compared to Dwayne county. Remember Dwanye county houses the Detroit River AKA the old reliable and expensive source of water that Flint was sourcing its water from originally before switching.
```{r results='asis', echo=FALSE}
print(xtable(percentConc), type="html")
```
Surface Water samples taken in the County of Genesee appear to show a multi-decade historical average of 41.3 mg/l almost twice as much as the 25.4 mg/l average in Genesee County. At this point I got a funny feeling why not check the median it should be relatively close to the mean?
```{r}
tapply(wqDf$ResultMeasureValue, wqDf$County, median)
```
Turns out the median was nowhere near the mean. The median shows Genesee County having a chloride concentration of 21.0 mg/l and Wayne with a 8.5 mg/l concentration. Genesee County has almost 3X the pre-treatment or initial chloride concentration compared to Wayne county. The discrepancy between the median and mean could be outliers or a non-normal distribution. If my experience has taught me any thing in these circumstances I need to see the full distribution and see what is happening here.
```{r}
ggplot(wqDf, aes(x = ResultMeasureValue, fill = County)) + geom_density(alpha = 0.3) + ggtitle("Density of Chloride Concentrations \n Genesee and Wayne County Surface Water") + xlab("[Chloride] (mg/l)") + ylab("Frequency")
```
That distribution sure doesn't look normal. It appears Wayne county has a lot of samples with low concentrations of chloride. It could be that one sampling site has so many samples that it is warping the mean and median. Perhaps what we should be doing is collecting an average by sample site and looking at the distribution of sample site averages.
```{r}
percentConc<- wqDf %>%
group_by(MonitoringLocationIdentifier, County) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
Median = median(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalSamples = n(),
stdError = sd(ResultMeasureValue, na.rm = TRUE))
tapply(percentConc$Median, percentConc$County, mean)
```
This just got interesting. At first it appeared as though Genesee County had significantly higher concentrations of Chloride than Wayne County. However once we aggregated median concentrations by Site and then averaged those by County It appears that Wayne County has 5X the amount of chloride in its surface water. To put this to rest we will conduct one more filter to remove sites with less than 3 samples to remove outlier measurements at unique sites. Remember running even one water sample requires multiple labs, USGS employees sampling at a site, and tens of thousands of dollars. So 3 samples is a big deal in this world (I should know I used to sample and analyze water for 4 years for the US Geological Survey)
```{r}
HighSampleSizePercentConc <- filter(percentConc, totalSamples >= 3)
tapply(percentConc$Median, percentConc$County, mean)
```
We have finally arrived closer to the truth. In general the rivers and lakes in Genesee County appear to have a much lower chloride concentration than the same tywpes of bodies of water in Wayne County. So wouldn't this put Flint, Mi at an advantage when sourcing their water locally? To explore this question we need to get more granular than the county. We need the exact coordinates of where the input for Flint's water is coming from.
To put this into perspective in 2014 the city of Detroit sampled and analyzed chloride concentration in tap water and [found an average concentration of 11.4 ppm which is equivalent to 11.4 mg/l](http://www.dwsd.org/downloads_n/customer_service/customer_information/water_quality_report.pdf) given the mass of water. Keep in mind this is not an apples to apples comparison as the prior is surface water measurements throughout the county of Genesee pre-treatment and the latter is treated water at the faucet.
The Detroit Water and Sewerage Dept. uses water sourced from ["the Detroit River... Clinton River, Rouge River, Ecorse River, and parts of" [other water sheds].](http://www.dwsd.org/downloads_n/customer_service/customer_information/water_quality_report.pdf)
Let's take a look at the initial chloride concentrations that DWSD sources the majority of their water from.
```{r}
