1+1
data1 <- read.csv(url("http://stat.columbia.edu/~rachel/datasets/nyt1.csv"))
head(data1)
data1$agecat <- cut(data1$Age, c(-Inf, 0, 18, 24, 34, 44, 54, 64, Inf))
summary(data1)
install.packages("doBy")
library("doBy")
siterange <- function(x){c(length(x),min(x),mean(x),max(x))}
summaryBy(Age~agecat, data = data1, FUN=siterange)
head(ddata())
head(data1)
test <- data.frame(x = c(1,2,3,4,5,6,7), y = 2*x^2)
test <- data.frame(x = c(1,2,3,4,5,6,7), y = 2*c(1,2,3,4,5,6,7)^2)
test
test$x2 <- test$x^2
fit1 <- lm(y ~ x + x2, data = test)
fit2 <- lm(y ~ poly(x,2), data = test)
fit1
fit2
predict(fit1, 2)
predict(fit1, x = 2)
predict(fit2, x = 2)
fit2 <- lm(y ~ poly(x,2, raw = TRUE), data = test)
fit1
fit2
install.packages("swirl")
library("swirl", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
swirl()
pnorm(70, mean=80, sd=10)
pnorm(1200, mean=1100, sd=75)
pnorm(1240, mean=1100, sd=75)
pnorm(1230, mean=1100, sd=75)
pbinom(5, size = 5, prob = 0.5)
pbinom(5, size = 10, prob = 0.5)
pbinom(5, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 5, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 5-1, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(q = 1, size = 1, prob = 0.5, lower.tail = FALSE)
pbinom(q = 0, size = 1, prob = 0.5, lower.tail = FALSE)
pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 2, size = 5, prob = 0.5, lower.tail = FALSE)
x<-pbinom(q = 4, size = 5, prob = 0.5, lower.tail = FALSE)
y<-pbinom(q = 2, size = 5, prob = 0.5, lower.tail = FALSE)
y
y-x
y
x
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
33/36
deck
52
4/52
16/52
0
16/52
12/52
3/51
2/51
swirl()
0.64
0.64
mypdf
?mypdf
mypdf
mypdf(1.6)
integrate(mypdf,0,1.6)
sqrt(2)
swirl
swirl()
exit
0.001*.997
(1-0.001)*(1-.985)
(.001*.997)/((.997*0.001)+(1-0.001)*(1-.985))
dice_sqr
ex2_fair <- sum(dice_fair)
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair - 3.5^2
sum(dice_high*dice_sqr) - 3.5^2
sum(dice_high*dice_sqr) - edh^2
?matri
?"matrix"
matrix(rnorm(10),10)
matrix(rnorm(10))
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(1000),1000),1,mean))
sd(apply(matrix(runif(1000),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(n)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(3,5)*(.8)^(5-3)*(1-0.8)*3
choose(5,3)*(.8)^(5-3)*(1-0.8)*3
choose(5,3)*(.8)^(5-3)*(1-0.8)^3
choose(5,3)*(.8)^(3)*(1-0.8)^3
apply(1:3,function(x) choose(5,x)*(.8)^(x)*(1-0.8)^x)
choose(5,3)*(.8)^(3)*(1-0.8)^3+choose(5,4)*(.8)^(4)*(1-0.8)^4+choose(5,5)*(.8)^(5)*(1-0.8)^5
choose(5,3)*(.8)^3*(.2)^(5-3)+choose(5,4)*(.8)^4*(.2)^(5-4)+choose(5,5)*(.8)^5*(.2)^(5-5)
?pbinom
pbinom(2,5,.8,lower.tail=FALSE)
qnorm(0.1)
0
qnorm(3,2)
qnorm(.975,3,2)
3+2*1.96
?pnorm
pnorm(1200,1020,50,lower.tail=FALSE)
pnorm((1200-1020)/50)
pnorm((1200-1020)/50,lower.tail=FALSE)
?qnorm
qnorm(.75,1020,50,lower.tail=TRUE)
.53
.53
?ppois
ppois(3,2.5*4)
?pbinom
pbinom(5,1000)
pbinom(5,1000, 2.4*4)
pbinom(5,1000, .01)
ppois(5,1000*.01)
coinPlot(10)
coinPlot(10000)
?qnorm
qnorm(0.95)
.6+c(-1,+1)
.6+c(1,-1)*qnorm(.975)*sqrt(.6*.4/100)
.6+c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
?binom.test
binom.test()
binom.test(60,100)
binom.test(60,100)$conf
binom.test(60,100)$conf.int
?mywald
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf
?pnorm
?qnorm
qnorm(.95,1100)
.25^4+.25^3
?ppois
ppois(10,15)
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot(2)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
g2-g1
difference <- g2-g1
mean(difference)
s<-sd(difference)
mn+c(-1,1)*qt(.95,9)*(s/sqrt(10))
mn+c(-1,1)*qt(.975,9)*(s/sqrt(10))
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
?t.test
t.test(difference,conf.level = 0.95)
t.test(difference)$conf
t.test(difference)$conf.int
sp<(7)*(15.34)^2+(20)*(18.23)^2
sp<-(7)*(15.34)^2+(20)*(18.23)^2
ns<-(8+21-2)
sp <- sqrt(sp/ns)
(132.86-127.44)+c(1,-1)*tq(ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(1,-1)*qt(ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(1,-1)*qt(.975,ns)*sp*sqrt(sum((1/8)+(1/21)))
(132.86-127.44)+c(-1,1)*qt(.975,ns)*sp*sqrt((1/8)+(1/21))
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sp<-((var(g1)+var(g2))/18)
sp<-sqrt((9*var(g1)+9*var(g2))/18)
g2
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE,var.equal=TRUE)$conf
t.test(g2,g1,paired=TRUE)$conf
num <- 2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 3
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
4
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
2
s/sqrt(10)
10/sqrt(100)
swirl()
swirl()
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("proto")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/ggplot2/ggplot2_1.0.1.tar.gz"
install.packages("proto")
install.packages(packageurl, repos=NULL, type="source")
library(swirl)
swirl()
2
7
(32-30)/(10/4)
15
qt(.95,15)
dim(fs)
t.test(fs,paired-TRUE)
d
3
t.test(fs$sheight-fs$fheight)
sd(fs$sheight-fs$fheight)/sqrt(1078)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
8
?pt
pt(2.5,15,lower.tail=FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail=FALSE)
mybin
pbinom(6,size-8,prob=.5,lower.tail=FALSE)
pbinom(6,size=8,prob=.5,lower.tail=FALSE)
pbinom(6,size=8,prob=.5,lower.tail=TRUE)
pbinom(7,size=8,prob=.5,lower.tail=TRUE)
ppois(9, lower.tail=FALSE,lambda = 5)
install.packages("PKI")
install.packages("rsconnect")
list.of.packages <- c("ggplot2", "acs")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)>0) {install.packages(new.packages)}
library(ggplot2)
library(acs)
setwd("~/DSTribune/Stories/FlintWaterQuality")
download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
library(gdal)
install.packages("gdal")
head(data1)
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf <- read.csv("result.csv")
head(wwqDf)
head(wqDf)
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
unique(wqDf$ResultSampleFractionText)
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
library(dplyr)
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
head(wqDf)
wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE))
unique(wqDf$MonitoringLocationIdentifier)
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE))
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE))
test
type(wqDf$MonitoringLocationIdentifier)
class(wqDf$MonitoringLocationIdentifier)
unique(wqDf$MonitoringLocationIdentifier)
head(wqDf)
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE))
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf$ActivityStartDate
class(wqDf$ActivityStartDate)
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE))
print(test)
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalCount = n())
print(test)
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalSamples = n())
print(test)
kml.text <- readLines("station.kml")
re <- "<coordinates> *([^<]+?) *<\\/coordinates>"
coords <- grep(re,kml.text)
re2 <- "src_id:"
SCR.ID <- grep(re2,kml.text)
re3 <- "<tr><td><b>Name:</b><td>"
Name <- grep(re3,kml.text)
kml.coordinates <- matrix(0,length(coords),4,dimnames=list(c(),c("ID","LAT","LON","ELEV")))
kml.names <- matrix(0,length(coords),1)
for(i in 1:length(coords)){
sub.coords <- coords[i]
temp1 <- gsub("<coordinates>"," ",kml.text[sub.coords])
temp2 <- gsub("</coordinates>"," ",temp1)
coordinates <- as.numeric(unlist(strsplit(temp2,",")))
sub.ID <- SCR.ID[i]
ID <- as.numeric(gsub("<tr><td><b>src_id:</b><td>"," ",kml.text[sub.ID]))
sub.Name <- Name[i]
NAME <- gsub(paste("<tr><td><b>Name:</b><td>"),"",kml.text[sub.Name])
kml.coordinates[i,] <- matrix(c(ID,coordinates),ncol=4)
kml.names[i,] <- matrix(c(NAME),ncol=1)
}
kml.coordinates
kml.text
coords
install.packages("maptools")
library(maptools)
getKMLcoordinates("station.kml", ignoreAltitude=FALSE)
coords <- getKMLcoordinates("station.kml", ignoreAltitude=TRUE)
coords
which R
install.packages('rgeos', type="source")
install.packages('rgdal', type="source")
library(rgdal)
test
coords <- as.data.frame(Lat = c(-83.79, -83.7902778, -83.8460698, -83.6693998, -83.4627282), Long = c(42.9111111, 42.9119444, 42.9419733, 43.0003052, 43.1144707), MonitoringLocationIdentifier = c("USGS-0414826544", "USGS-0414826545", "USGS-041482663", "USGS-430001083401006", "USGS-430645083274606"))
coords
setwd("~/DSTribune/Stories/FlintWaterQuality")
library(ggplot2)
library(acs)
library(dplyr)
library(gdal)
library(maptools)
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&sampleMedia=Water&characteristicType=Inorganics%2C+Major%2C+Non-metals&characteristicName=Chloride&mimeType=csv&zip=yes&sorted=no", destfile = "waterQualityMI")
wqDf <- read.csv("result.csv")
wqDf <- filter(wqDf, ActivityMediaSubdivisionName == "Surface Water", ResultSampleFractionText == 'Dissolved', ResultStatusIdentifier == 'Accepted')
wqDf$MonitoringLocationIdentifier <- as.character(wqDf$MonitoringLocationIdentifier)
wqDf$ActivityStartDate <- as.POSIXct(wqDf$ActivityStartDate)
wqDf <- wqDf %>%
filter(ResultMeasureValue != "NA")
summary(wqDf$ResultMeasureValue)
ggplot(data=wqDf, aes(ResultMeasureValue)) + geom_histogram(color = "black", fill = 'blue') + ggtitle("Distribution of surface water dissolved chloride \n in Genesee County, USGS NAWQA") + ylab("Frequency") + xlab("mg/l Dissolved Chloride")
#download.file("http://waterqualitydata.us/Result/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=csv&zip=yes&sorted=no", destfile = "stationLocationsMI")
#download.file("http://waterqualitydata.us/Station/search?countrycode=US&statecode=US%3A26&countycode=US%3A26%3A049&mimeType=kml&zip=yes&sorted=no", destfile = "stationShapesMI")
test <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalSamples = n())
print(test)
#At this point we used QGIS to open the kml and extract the coordinates
coords <- as.data.frame(Lat = c(-83.79, -83.7902778, -83.8460698, -83.6693998, -83.4627282), Long = c(42.9111111, 42.9119444, 42.9419733, 43.0003052, 43.1144707), MonitoringLocationIdentifier = c("USGS-0414826544", "USGS-0414826545", "USGS-041482663", "USGS-430001083401006", "USGS-430645083274606"))
coords <- as.data.frame(as.matrix(Lat = c(-83.79, -83.7902778, -83.8460698, -83.6693998, -83.4627282), Long = c(42.9111111, 42.9119444, 42.9419733, 43.0003052, 43.1144707), MonitoringLocationIdentifier = c("USGS-0414826544", "USGS-0414826545", "USGS-041482663", "USGS-430001083401006", "USGS-430645083274606")))
Lat = c(-83.79, -83.7902778, -83.8460698, -83.6693998, -83.4627282)
Long = c(42.9111111, 42.9119444, 42.9419733, 43.0003052, 43.1144707)
MonitoringLocationIdentifier = c("USGS-0414826544", "USGS-0414826545", "USGS-041482663", "USGS-430001083401006", "USGS-430645083274606")
coords <- as.data.frame(Lat, Long, MonitoringLocationIdentifier)
coords <- data.frame(Lat, Long, MonitoringLocationIdentifier)
coords
sampleData <- wqDf %>%
group_by(MonitoringLocationIdentifier) %>%
summarise(Avg = mean(ResultMeasureValue, na.rm = TRUE),
Max = max(ResultMeasureValue, na.rm = TRUE),
LatestSample = max(ActivityStartDate, na.rm = TRUE),
totalSamples = n())
print(sampleData)
coords <- merge(x=coords, y=sampleData, by="MonitoringLocationIdentifier", all = TRUE)
coords
